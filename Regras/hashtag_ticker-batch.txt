# Escreva seu script abaixo, seguindo a sintaxe das classes em estrutura_ud.py
# O script é executado dentro de um loop (repetição) para cada "sentence" do corpus.
# Dentro de cada "sentence", é realizado ainda um outro loop para acessar cada "token" de "sentence.tokens" (lista de tokens dessa frase), momento em que é aplicada a regra que poderá ser editada abaixo.
# Não utilize as abreviações disponíveis apenas para busca, como "nt", "pt" e "ht"
# Para adicionar novos valores a colunas com múltiplos valores (features, misc), utilize as funções append_to() e remove_from(), como no exemplo abaixo
# Ex: append_to(token.feats, "Gender=Masc|Number=Sing")
# Para buscar utilizando expressão regular, utilize a função regex(), como no exemplo abaixo
# Ex: regex(".*mod", token.deprel)

#Anotação de hashtags que são tickers
#Hashtags com postag "X" que são tickers 
#if regex("X", token.upos) and regex("#[a-zA-Z]{4}[3456]", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA"
if regex("X", token.upos) and regex("#[a-zA-Z]{4}11", token.lemma):
	token.xpos = "ENTIDADE=S-COISA"	

#Hashtags com postag "PROPN" que são tickers 
#if regex("PROPN", token.upos) and regex("#[a-zA-Z]{4}[3456]", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA"

if regex("PROPN", token.upos) and regex("#[a-zA-Z]{4}11", token.lemma):
	token.xpos = "ENTIDADE=S-COISA"	
