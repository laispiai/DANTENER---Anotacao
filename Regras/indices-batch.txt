# Escreva seu script abaixo, seguindo a sintaxe das classes em estrutura_ud.py
# O script é executado dentro de um loop (repetição) para cada "sentence" do corpus.
# Dentro de cada "sentence", é realizado ainda um outro loop para acessar cada "token" de "sentence.tokens" (lista de tokens dessa frase), momento em que é aplicada a regra que poderá ser editada abaixo.
# Não utilize as abreviações disponíveis apenas para busca, como "nt", "pt" e "ht"
# Para adicionar novos valores a colunas com múltiplos valores (features, misc), utilize as funções append_to() e remove_from(), como no exemplo abaixo
# Ex: append_to(token.feats, "Gender=Masc|Number=Sing")
# Para buscar utilizando expressão regular, utilize a função regex(), como no exemplo abaixo
# Ex: regex(".*mod", token.deprel)

#Regras específicas para anotar alguns indicadores
#Anterior ao tipo INDICADOR

#IBOVESPA
#if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*ibovespa", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"

#IBOVESPA hashtag
#if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*#ibovespa", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"

#IBOV
#if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*ibov", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"

#IBOV hashtag
if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*#ibov", token.lemma):
	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"

#IFNC
#if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*IFNC", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"

#INDFUT
#if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*INDFUT", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"

#IDIV
#if token.upos == "PROPN" and regex("(?i)[a-zA-Z]*IDIV", token.lemma):
#	token.xpos = "ENTIDADE=S-COISA-MEMBROCLASSE"
