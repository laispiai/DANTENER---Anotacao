# Escreva seu script abaixo, seguindo a sintaxe das classes em estrutura_ud.py
# O script é executado dentro de um loop (repetição) para cada "sentence" do corpus.
# Dentro de cada "sentence", é realizado ainda um outro loop para acessar cada "token" de "sentence.tokens" (lista de tokens dessa frase), momento em que é aplicada a regra que poderá ser editada abaixo.
# Não utilize as abreviações disponíveis apenas para busca, como "nt", "pt" e "ht"
# Para adicionar novos valores a colunas com múltiplos valores (features, misc), utilize as funções append_to() e remove_from(), como no exemplo abaixo
# Ex: append_to(token.feats, "Gender=Masc|Number=Sing")
# Para buscar utilizando expressão regular, utilize a função regex(), como no exemplo abaixo
# Ex: regex(".*mod", token.deprel)

#Regras para anotar valores monetários
#if regex("NUM", token.upos) and regex("R\$", token.previous_token.lemma) and not regex("NOUN", token.next_token.upos) and regex("_", #token.xpos):
#	token.previous_token.xpos = "ENTIDADE=B-VALOR-MOEDA"
#	token.xpos = "ENTIDADE=E-VALOR-MOEDA"

if regex("NUM", token.upos) and regex("R\$", token.previous_token.lemma) and regex("NOUN", token.next_token.upos) and regex("_", token.xpos):
	token.previous_token.xpos = "ENTIDADE=B-VALOR-MOEDA"
	token.xpos = "ENTIDADE=I-VALOR-MOEDA"
	token.next_token.xpos = "ENTIDADE=E-VALOR-MOEDA"

# Terá exceções
#dante_01_460225661630947328l
#dante_01_455799739674415105l
#dante_01_453193246420647936l

#query para verificar 
#token.xpos = "ENTIDADE=E-VALOR-MOEDA" and token.upos = "NOUN"
#agrupar por lemma


#if regex("NUM", token.upos) and regex("U\$", token.previous_token.lemma) and not regex("NOUN", token.next_token.upos) and regex("_", #token.xpos):
#	token.previous_token.xpos = "ENTIDADE=B-VALOR-MOEDA"
#	token.xpos = "ENTIDADE=E-VALOR-MOEDA"
